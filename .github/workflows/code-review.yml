name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  ai-code-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    # Skip review for dependabot PRs to avoid unnecessary API usage
    if: github.actor != 'dependabot[bot]'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "latest"

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Install StreetRace
        run: |
          poetry lock
          poetry install

      - name: Validate Configuration
        run: |
          ./scripts/validate-config.sh

      - name: Extract PR Changes
        id: extract-diff
        run: |
          ./scripts/github-diff-extractor.sh > /tmp/pr-diff.txt
          echo "diff-size=$(wc -c < /tmp/pr-diff.txt)" >> $GITHUB_OUTPUT

      - name: Check diff size
        id: check-size
        run: |
          DIFF_SIZE=${{ steps.extract-diff.outputs.diff-size }}
          if [ "$DIFF_SIZE" -gt 100000 ]; then
            echo "Diff too large ($DIFF_SIZE bytes). Skipping AI review to avoid excessive token usage."
            echo "large-diff=true" >> $GITHUB_OUTPUT
          else
            echo "large-diff=false" >> $GITHUB_OUTPUT
          fi

      - name: Run AI Code Review
        if: steps.check-size.outputs.large-diff != 'true'
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_AI_API_KEY: ${{ secrets.GOOGLE_AI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
          HEAD_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          echo "Starting AI code review..."
          
          # Check if any API key is available
          if [ -z "$ANTHROPIC_API_KEY" ] && [ -z "$OPENAI_API_KEY" ] && [ -z "$GOOGLE_AI_API_KEY" ]; then
            echo "No AI API key configured. Skipping AI review."
            echo "Please configure ANTHROPIC_API_KEY, OPENAI_API_KEY, or GOOGLE_AI_API_KEY in repository secrets."
            exit 0
          fi
          
          # Determine which AI model to use based on available API keys
          if [ -n "$ANTHROPIC_API_KEY" ]; then
            MODEL="anthropic/claude-3-5-sonnet-20241022"
            echo "Using Anthropic Claude model"
          elif [ -n "$OPENAI_API_KEY" ]; then
            MODEL="openai/gpt-4o-mini"
            echo "Using OpenAI GPT model"
          elif [ -n "$GOOGLE_AI_API_KEY" ]; then
            MODEL="google/gemini-1.5-flash"
            echo "Using Google Gemini model"
          fi
          
          # Create review prompt with embedded variables
          echo "Creating review prompt..."
          python3 scripts/substitute-variables.py \
            templates/github-review-prompt.md \
            /tmp/pr-diff.txt \
            /tmp/review-prompt.md
          
          # Run the AI review
          echo "Running AI review with model: $MODEL"
          if poetry run streetrace --model="$MODEL" --prompt="$(cat /tmp/review-prompt.md)" > /tmp/review-output.txt 2>&1; then
            echo "AI review completed successfully"
            cp /tmp/review-output.txt /tmp/clean-review.txt
          else
            echo "AI review failed, creating fallback response"
            echo "AI code review could not be completed due to an error. Please review the changes manually." > /tmp/clean-review.txt
          fi

      - name: Post Review Comment
        if: steps.check-size.outputs.large-diff != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Posting AI review comment..."
          
          if [ -f "/tmp/clean-review.txt" ]; then
            REVIEW_CONTENT=$(cat /tmp/clean-review.txt)
            gh pr comment ${{ github.event.pull_request.number }} --body "ðŸ¤– **AI Code Review**

$REVIEW_CONTENT

---
*This review was generated automatically using StreetRace AI. Please use your judgment when addressing the feedback.*"
          else
            echo "No review content found, skipping comment."
          fi

      - name: Post Large Diff Notice
        if: steps.check-size.outputs.large-diff == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          COMMENT="ðŸ¤– **AI Code Review Skipped**

This PR contains a large diff (${{ steps.extract-diff.outputs.diff-size }} bytes) that would exceed reasonable token limits for AI review.

Consider:
- Breaking this PR into smaller, focused changes
- Running local code review using \`./scripts/code-review-poc.sh\`
- Focusing the review on specific files or components

You can still run manual review with:
\`\`\`bash
git checkout ${{ github.event.pull_request.head.ref }}
./scripts/code-review-poc.sh
\`\`\`"

          gh pr comment $PR_NUMBER --body "$COMMENT"

      - name: Archive review results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-review-results
          path: /tmp/*review*.txt
          retention-days: 30