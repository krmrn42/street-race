name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  ai-code-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    # Skip review for dependabot PRs
    if: github.actor != 'dependabot[bot]'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Fetch all branches
        run: |
          git fetch origin main:main || true
          git fetch fork main:main || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "latest"

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Install MCP Tools
        run: |
          npm install -g @modelcontextprotocol/server-filesystem

      - name: Install StreetRace
        run: |
          poetry install

      - name: Run Code Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_AI_API_KEY: ${{ secrets.GOOGLE_AI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
          HEAD_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          # Run the code review script
          ./.github/workflows/scripts/code-review.sh
          
          # The script sets REVIEW_JSON_FILE and REVIEW_MARKDOWN_FILE in GITHUB_ENV

      - name: Generate GitHub Annotations
        if: env.REVIEW_JSON_FILE != ''
        run: |
          # Parse the JSON review and output GitHub annotations
          python3 ./.github/workflows/scripts/parse-review-annotations.py "$REVIEW_JSON_FILE" \
            --summary-file /tmp/review-summary.md
          
      - name: Add Job Summary
        if: always() && env.REVIEW_MARKDOWN_FILE != ''
        run: |
          # Add the review summary to GitHub Actions job summary
          if [ -f "/tmp/review-summary.md" ]; then
            cat /tmp/review-summary.md >> $GITHUB_STEP_SUMMARY
          fi
          
          # Also add link to full review
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“„ [Full Review Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)" >> $GITHUB_STEP_SUMMARY

      - name: Post Review Comment
        if: env.REVIEW_MARKDOWN_FILE != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          # Post the markdown review as a PR comment
          if [ -f "$REVIEW_MARKDOWN_FILE" ]; then
            ./.github/workflows/scripts/post-review-comment.sh "$REVIEW_MARKDOWN_FILE"
          else
            echo "ERROR: No review generated. This indicates a configuration issue (likely missing API key)."
            echo "Please configure one of the following secrets: ANTHROPIC_API_KEY, OPENAI_API_KEY, or GOOGLE_AI_API_KEY"
            exit 1
          fi

      - name: Archive review results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-review-results
          path: |
            /tmp/*review*.*
            code-reviews/*
          retention-days: 30
