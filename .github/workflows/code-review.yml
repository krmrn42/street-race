name: AI Code Review POC

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  ai-code-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    # Skip review for dependabot PRs
    if: github.actor != 'dependabot[bot]'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "latest"

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Install StreetRace
        run: |
          poetry install

      - name: Run Code Review POC
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_AI_API_KEY: ${{ secrets.GOOGLE_AI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
          HEAD_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          # Run the POC script and capture output
          ./scripts/code-review-poc.sh | tee /tmp/poc-output.txt
          
          # Extract the AI response and save it
          sed -n '/AI Code Review Results/,/Results saved to:/p' /tmp/poc-output.txt | \
            sed '1d;$d' > /tmp/ai-review-result.txt || true
          
          # Also try to get the saved file
          SAVED_FILE=$(grep "Results saved to:" /tmp/poc-output.txt | awk -F': ' '{print $2}' || echo "")
          if [ -n "$SAVED_FILE" ] && [ -f "$SAVED_FILE" ]; then
            cp "$SAVED_FILE" /tmp/ai-review-result.txt
          fi

      - name: Post Review Comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          # Check if review was generated
          if [ -f "/tmp/ai-review-result.txt" ] && [ -s "/tmp/ai-review-result.txt" ]; then
            ./scripts/post-review-comment.sh /tmp/ai-review-result.txt
          else
            echo "No review generated, posting notice"
            echo "AI code review could not be completed. Please check API key configuration." > /tmp/fallback-review.txt
            ./scripts/post-review-comment.sh /tmp/fallback-review.txt || true
          fi

      - name: Archive review results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-review-results
          path: |
            /tmp/*review*.txt
            /tmp/pr-diff.txt
          retention-days: 30